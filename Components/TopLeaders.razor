<Tabs SelectedTab="@selectedTab" SelectedTabChanged="@OnSelectedTabChanged">
    <Items>
        <div class="w-100 d-flex justify-content-around align-items-center flex-row">
            <div class="col-md-3">
                <a href="home" class="badge badge-light">Back to Home</a>
            </div>
            <span class="col-md-6 text-center badge badge-light">Top Public Contributors</span>
            <div class="d-flex justify-content-center align-items-center flex-row col-md-3">
                <Tab Name="today">
                    <span class="badge badge-light">Today</span>
                </Tab>
                <Tab Name="thisweek">
                    <span class="badge badge-light">This Week</span>
                </Tab>
            </div>
        </div>
    </Items>
    <Content>
        <TabPanel Name="today">
            <div class="d-flex justify-content-center align-items-center flex-column">
                <div>
                    @foreach (var leaders in leadersData.Select((data, index) => new {data, index}))
                    {
                        
                    }
                </div>
                <div style="width: 100%">
                    @foreach (var leaders in leadersData)
                    {
                        <BottomLeaders></BottomLeaders>
                    }
                </div>
            </div>
        </TabPanel>
        <TabPanel Name="thisweek">
            <div class="d-flex justify-content-center align-items-center flex-column">
                <div>
                    <MainLeaders></MainLeaders>
                </div>
                <div style="width: 100%">
                    <BottomLeaders></BottomLeaders>
                </div>
            </div>
        </TabPanel>
    </Content>
</Tabs>


@code {

    [Parameter] public List<LeadersModel> leadersData { get; set; }
    
    string selectedTab = "today";

    private void OnSelectedTabChanged( string name )
    {
        selectedTab = name;
    }
}